[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Neutral Networks",
    "section": "",
    "text": "Preface\nLearning outcomes",
    "crumbs": [
      "Preface"
    ]
  },
  {
    "objectID": "lab.html",
    "href": "lab.html",
    "title": "Neural Networks",
    "section": "",
    "text": "Introduction",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Neural Networks</span>"
    ]
  },
  {
    "objectID": "lab.html#load-packages",
    "href": "lab.html#load-packages",
    "title": "Neural Networks",
    "section": "Load packages",
    "text": "Load packages\n\n\nCode\n# load packages\nrm(list=ls())\nlibrary(tidyverse)\nlibrary(ggcorrplot)\nlibrary(glmnet)\nlibrary(fastDummies)\nlibrary(pROC)\nlibrary(ranger)\nlibrary(e1071)\nlibrary(class)\nlibrary(xgboost)\n\n# Load the clinical data\ndata_obesity &lt;- read_csv(\"data/data-obesity.csv\") \n\n# Load gene expression data\ndata_expr &lt;- read_csv(\"data/data-obesity-genes.csv\")\ngenes_all &lt;- colnames(data_expr)[-1]  # Exclude the 'id' column\n\n# Genes\ngens_known &lt;- c(\"FTO\", \"MC4R\", \"LEP\")\ngenes_other &lt;- setdiff(genes_all, gens_known)",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Neural Networks</span>"
    ]
  },
  {
    "objectID": "lab.html#split-data",
    "href": "lab.html#split-data",
    "title": "Neural Networks",
    "section": "Split Data",
    "text": "Split Data\n\n# join gene expression data with clinical data\ndata &lt;- data_obesity %&gt;%\n  left_join(data_expr, by = \"id\") %&gt;%\n  dplyr::select(\"obese\", all_of(genes_other)) %&gt;%\n  na.omit()\n\n# three-way split: train (60%), validation (20%), test (20%)\nset.seed(123)\nn &lt;- nrow(data)\nidx &lt;- sample(seq_len(n))\nidx_train &lt;- idx[1:floor(0.6 * n)]\nidx_valid &lt;- idx[(floor(0.6 * n) + 1):floor(0.8 * n)]\nidx_test  &lt;- idx[(floor(0.8 * n) + 1):n]\n\ndata_train &lt;- data[idx_train, ]\ndata_valid &lt;- data[idx_valid, ]\ndata_test  &lt;- data[idx_test, ]\n\n# To keep focus on the important parts, we will skip feature engineering\n# and we will just scale all data\nx_train &lt;- data_train %&gt;%\n  dplyr::select(-obese) %&gt;%\n  as.matrix() %&gt;%\n  scale()\n\nx_valid &lt;- data_valid %&gt;%\n  dplyr::select(-obese) %&gt;%\n  as.matrix() %&gt;%\n  scale()\n\nx_test &lt;- data_test %&gt;%\n  dplyr::select(-obese) %&gt;%\n  as.matrix() %&gt;%\n  scale()\n\n# Separate and format target variable\ny_train &lt;- data_train$obese\ny_train &lt;- ifelse(y_train == \"Yes\", 1, 0) \n\ny_valid &lt;- data_valid$obese\ny_valid &lt;- ifelse(y_valid == \"Yes\", 1, 0)\n\ny_test &lt;- data_test$obese\ny_test &lt;- ifelse(y_test == \"Yes\", 1, 0)",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Neural Networks</span>"
    ]
  }
]